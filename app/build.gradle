plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "org.jetbrains.kotlin.kapt" version "1.5.31"

}
// breaking
ext.majorVersion = 0
// feature
ext.minorVersion = 1
//bugfix
ext.patchVersion = 0
/*
 alpha - beta - RC - stable
 */
ext.preRelease = "alpha"

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.mafqud.android"
        minSdk 21
        targetSdk 31
        versionCode generateVersionCode() // 010203
        versionName generateVersionName() // 1.2.3-alpha
        buildConfigField "String", "PRE_RELEASE", "\"${getPreRelease()}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        // my.jks information
        release {
            storeFile file('/home/shehata/Desktop/mykey.jks')
            storePassword 'android'
            keyAlias 'upload'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            // to sign the release apk
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BUILDTYPE_AND_PRE_RELEASE", "\"release.${getPreRelease()}\""

        }
        debug {
            versionNameSuffix ".debug"
            buildConfigField "String", "BUILDTYPE_AND_PRE_RELEASE", "\"debug.${getPreRelease()}\""

        }
    }

    bundle {
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit false
        }
    }
    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
        viewBinding true
    }

    // Set both the Java and Kotlin compilers to target Java 8.

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    composeOptions {
        kotlinCompilerVersion = "1.5.21"
        kotlinCompilerExtensionVersion = "1.1.0-beta02"
    }
}

dependencies {

    //implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$gradle.kotlin_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    /**
     * libs dependencies.
     */

    // New dependencies
    implementation "androidx.compose.ui:ui-tooling:1.1.0-beta02"
    testImplementation "androidx.compose.ui:ui-test:1.1.0-beta02"
    implementation 'androidx.compose.ui:ui:1.1.0-beta02'
    implementation "androidx.compose.ui:ui-util:1.1.0-beta02"


    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.1.0-beta02'
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation 'androidx.compose.foundation:foundation:1.1.0-beta02'
    // Material Design
    implementation 'androidx.compose.material:material:1.1.0-beta02'
    // Material design icons
    implementation 'androidx.compose.material:material-icons-core:1.1.0-beta02'
    implementation 'androidx.compose.material:material-icons-extended:1.1.0-beta02'
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0'

    // Integration with observables
    implementation 'androidx.compose.runtime:runtime-livedata:1.1.0-beta02'

    def lifecycle_version = "2.4.0"

    implementation 'androidx.appcompat:appcompat:1.4.0-rc01'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // Jetpack Compose Integration for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //implementation "androidx.navigation:navigation-compose:1.0.0-alpha09"

    implementation "com.google.accompanist:accompanist-coil:0.8.1"

    // Paging Compose
    implementation "androidx.paging:paging-compose:1.0.0-alpha14"

    /**
     * HorizontalPager
     */
    implementation "com.google.accompanist:accompanist-pager:0.17.0"

    // If using indicators, also depend on
    implementation "com.google.accompanist:accompanist-pager-indicators:0.16.1"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$gradle.nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$gradle.nav_version"

    // Typed DataStore (Typed API surface, such as Proto)
    implementation "androidx.datastore:datastore-preferences:1.0.0"


    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"

    //Dagger Hilt
    def hilt_version = "2.37"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // Okhttp
    implementation("com.squareup.okhttp3:okhttp:4.5.0")
    // retrofit moshi
    implementation "com.squareup.retrofit2:converter-moshi:2.4.0"

    // rating bar
    implementation 'com.github.a914-gowtham:compose-ratingbar:1.1.1'

    def camerax_version = "1.0.1"
    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    // CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha28"
    // text custom
    implementation 'com.antonionicolaspina:textimageview:4.0'

    implementation("io.coil-kt:coil-compose:1.4.0")

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // color picker
    implementation 'com.github.dhaval2404:colorpicker:2.0'

    //maps
    implementation("com.google.android.libraries.maps:maps:3.1.0-beta")
    implementation("com.google.maps.android:maps-v3-ktx:2.2.0")

    //lottie
    implementation "com.airbnb.android:lottie-compose:4.1.0"

    // face login sdk
    implementation 'com.facebook.android:facebook-login:5.15.3'

    // Google login sdk
    implementation 'com.google.android.gms:play-services-auth:19.2.0'

    // swipe to  refresh
    implementation "com.google.accompanist:accompanist-swiperefresh:0.18.0"

    //Insets for Jetpack ComposeÂ¶
    implementation "com.google.accompanist:accompanist-insets:0.20.0"
    // If using insets-ui
    implementation "com.google.accompanist:accompanist-insets-ui:0.20.0"

    //PhotoEditor
    implementation 'com.burhanrashid52:photoeditor:1.5.1'

    // glide compose
    implementation "com.github.skydoves:landscapist-glide:1.4.1"

    //gradiant textview
    implementation 'com.github.veeyaarVR:SuperGradientTextView:1.1'

    //SplashScreen compat library
    implementation 'androidx.core:core-splashscreen:1.0.0-alpha02'

}


private Integer generateVersionCode() {
    return ext.majorVersion * 10000 + ext.minorVersion * 100 + ext.patchVersion
}

private String getPreRelease() {
    return ext.preRelease

}

private String generateVersionName() {
    String versionName = "${ext.majorVersion}.${ext.minorVersion}.${ext.patchVersion}"
    if (ext.preRelease != null & !ext.preRelease.isEmpty()) {
        versionName = versionName + "-" + ext.preRelease
    }
    return versionName
}